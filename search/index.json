[{"content":"读《飘》 一些个人感想 对她爱过的这两个男人，她谁都没有真正了解过，所以才都失去了他们。直到现在她才模模糊糊地意识到，如果她真正的了解过阿希里，她就绝不会爱上他；如果她真正了解过瑞特，她也就绝不会失去他了。\n从24年暑假我就开始有想法，到了大学以后要多读一些经典名著\n果然经典的名著总是会给人感染力的，从在塔拉庄园“风姿翩翩”的少女，到最后残酷无情、唯利是图甚至有些卑鄙的夫人，我没有想到十年内（甚至说不用十年的时间，仅仅是一场战争）就能够这么显著的改变了一个人的性格。\n一个人，活一世总是要有些盼头才能活下去的。否则一个人也就“失去了所有的力气和手段”。支持斯嘉丽的，一开始是“少男”们的追崇，在，后面则是为了谋生所必须的钱和利益。当然，还有她追求了十多年的阿希里。她为了她的目标，可以不择一切手段——可以去欺骗弗朗克，可以去压榨罪犯和黑人。她勇敢，她胆大，她精明能干，她无所顾忌；当然她也足够卑鄙，足够放浪，足够无情。就是这种近乎冷血的行为，让她获得了足够的财富、声誉和地位。\n但是转过头来到最后，实际上她失去了一切。\n这么长时间以来，我一直也在思考人生的价值和意义所在，也更在思考时代与个人的紧密关系。我们究竟是为了什么而活着，又究竟在追求着什么，我们的时代又会怎样无私的送来/无情的剥夺我们的所求所爱的一件件事物。\n因为某些事情，我可能对于“命运”二字格外相信。我可能有一点落入罗翔老师所说的“宿命论”的范畴。虽然我自认为努力会有成果，但是我可能更相信命运的安排。说句不好听的，如果不是上天给了我一副还算擅长文化知识学习的头脑，我又怎么能够现在来到NJU读书呢？所以，我现在可能更愿意相信上天赋予我的东西吧——得之我幸，不得我命。即便是许多时候别人的风光，背后可能是无数的苦痛与折磨，而我“又何羡乎”？\n我知道有些往事永远无法散去，那种痛苦可能要几年甚至十几年的时光的稀释。但是我不希望我和斯嘉丽一样，再为了某些虚无缥缈的东西而失去、错过所爱的人吧。我只希望自己能够快点承担起自己的责任，去陪她一起走过人生的春夏秋冬。\nGone with the wind\nGone with the wind\n就让往事随风飘去\nBy SweetGargamel\n","date":"2025-01-13T00:00:00Z","image":"https://SweetGargamel.github.io/p/%E8%AF%BB%E9%A3%98/cover_hu9023313130133434017.png","permalink":"https://SweetGargamel.github.io/p/%E8%AF%BB%E9%A3%98/","title":"读《飘》"},{"content":"解析SICP-Proj4 EC 本文章请搭配NJU-SICP Project04 EC (Adopted from CS61A from Berkeley) 食用\nWritten By SweetGargamel\n原问题 Why current interpreter cannot properly process tail call? Consider such scheme code:\n1 2 3 4 5 6 (define (factor n acc) (if (= n 0) acc (factor (- n 1) (* acc n)))) (factor 10 1) The current evaluation process is:\n1 2 3 4 scheme_eval(`(factor 10 1)) ===\u0026gt; return scheme_eval(`(factor 9 10)) ===\u0026gt; return (return scheme_eval(`(factor 8 90))) ... The problem is python interpreter does not properly perform tail call.\nThere\u0026rsquo;re mainly three way to solve this problem:\ntransform the scheme interpreter to an non-recursive interpreter, i.e., eliminate all recursive call to scheme_eval. That can be accomplished by rewrite this interpreter to an CEK interpreter. (\u0026lsquo;C\u0026rsquo; means control, \u0026lsquo;E\u0026rsquo; means environment, \u0026lsquo;K\u0026rsquo; means continuation). See here and Chap. 5 of ESSENTIALS OF PROGRAMMING LANGUAGES. rewrite this interpreter to an trampolined interpreter. We use this approach. transform the source scheme code, e.g. Continuation-Passing Style transformation. The trampoline technique is the simplest one. So we use this approach.\nTrampoline The trampoline technique is a simple technique to perform proper tail call in a \u0026ldquo;bad\u0026rdquo; language (e.g. Python, C, C++, Java, \u0026hellip;).\nFor example, we can define a sum recursive function in python:\n1 2 3 4 5 def sum(n, acc): if n == 0: return acc else: return sum(n - 1, acc + n) And sum(10000, 0) will produce a StackOverflow error. Now we \u0026ldquo;trampoline\u0026rdquo; such function:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 class Unevaluated: def __init__(self, n, acc): self.n = n self.acc = acc def sum_tram(n, acc): if n == 0: return acc else: return Unevaluated(n - 1, acc + n) def sum(n, acc): # use do-while here is better, but Python does not support that res = sum_tram(n, acc) while isinstance(res, Unevaluated): res = sum_tram(res.n, res.acc) return res Now sum(10000, 0) will properly works. This can be generalized to transform all recursive functions to loops, see here. But the above form is enough for our problem.\nThe Tasks Complete the function optimize_tail_calls in scheme_eval_apply.py. It returns an alternative to scheme_eval that is properly tail recursive. That is, the interpreter will allow an unbounded number of active tail calls in constant space. It has a third argument tail that indicates whether the expression to be evaluated is in a tail context.\nThe Unevaluated class represents an expression that needs to be evaluated in an environment. When optimized_eval receives a non-atomic expression in a tail context, it returns an Unevaluated instance. Otherwise, it should repeatedly call original_scheme_eval until the result is a value, rather than an Unevaluated.\nA successful implementation will require changes to several other functions, including some functions that we provided for you. All expressions throughout your interpreter that are in a tail context should be evaluated by calling scheme_eval with True as the third argument (now called tail). Your goal is to determine which expressions are in a tail context throughout your code and change calls to scheme_eval as needed.\nOnce you finish, uncomment the following line in scheme_eval_apply.py to use your implementation:\nscheme_eval = optimize_tail_calls(scheme_eval)\n疑惑引出 问题 1 2 3 4 5 6 7 8 def optimize_tail_calls(original_scheme_eval): def optimized_eval(expr, env, tail=False): if tail and not scheme_symbolp(expr) and not self_evaluating(expr): return Unevaluated(expr,env) # BEGIN PROBLEM EC # END PROBLEM EC return optimized_eval 是的，很显然你会不会觉得，开始在运行第一行代码的时候，如果是尾递归的话就会直接返回一个Unevaluated的玩意，这程序不就该崩了吗？ 答案 1 2 3 4 5 6 7 8 9 10 11 def optimize_tail_calls(original_scheme_eval): def optimized_eval(expr, env, tail=False): if tail and not scheme_symbolp(expr) and not self_evaluating(expr): return Unevaluated(expr,env) # BEGIN PROBLEM EC res=original_scheme_eval(expr, env) while isinstance(res, Unevaluated): res = original_scheme_eval(res.expr, res.env) return res # END PROBLEM EC return optimized_eval 是的你看了答案会不会更觉得下面的代码根本就运行不到？ （当然除了该这些代码还应该按照助教的建议，把凡是尾递归的部分都给加一个tail=True的参数） 使用Vscode的Debug功能解析 怎么使用Debug 直接按照助教的提示修改.vscode/launch.json文件即可\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 { \u0026#34;version\u0026#34;: \u0026#34;0.2.0\u0026#34;, \u0026#34;configurations\u0026#34;: [ { \u0026#34;name\u0026#34;: \u0026#34;Python: Current File\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;python\u0026#34;, \u0026#34;request\u0026#34;: \u0026#34;launch\u0026#34;, \u0026#34;program\u0026#34;: \u0026#34;scheme.py\u0026#34;, \u0026#34;args\u0026#34;:[ \u0026#34;-i\u0026#34;, \u0026#34;tests.scm\u0026#34; ], \u0026#34;console\u0026#34;: \u0026#34;integratedTerminal\u0026#34;, \u0026#34;justMyCode\u0026#34;: true, } ] } 你可以修改tests.scm里面的测试用例来测试，下面是我的例子 1 2 3 4 5 6 (define (factor n acc) (if (= n 0) acc (factor (- n 1) (* acc n)))) (factor 10 1) 当然别忘打断点了\nDebug，启动！ 点击Start Debugging\n然后你会发现左边出来这些东西，分别是你的VARIABLES、WATCH、CALL_STACK\nVARIABLES是当前的变量 WATCH可以添加自己想看的表达式或者变量的值 CALL_STACK看调用的堆栈 我们发现他停到了if这个语句停下来了\n现在解释器在干啥？ 我们发现左上角的expr的第一个sym是define，说明他正在进行do_define_form 怎么让解释器往下走？ 在最上面有几个按钮，分别是下面几个 Step Into 如果当前语句是一个call expression，他就会进入函数体让你看函数体内部是怎么执行的；否则和Step Over一样。 Step Over：不管是否是call expression直接当一条普通语句运行过去。 Step Out：跳出当前Frame（比如A里面调用了B函数，我现在通过Step Into进入了B所在的Frame,Step Out就直接回到A里面） 所以我们按Step Into，你会发现他跳过了上面的if语句；这是因为我们现在是在do_define_form，并不是尾递归操作，所以就调用原始的eval_call. 我们再次选择Step Into，发现： 这个部分就比较好理解了，他就是在做define的内容，我就不解释了。\n做完define form之后 按照解释器解释的规则，我们把factor绑定到对应的lambda函数之后，就会执行(factor 10 1) 那么他的的执行顺序就是（请你注意看左下角的CALL_STACK）\neval factor eval 10 eval 1 图略，类似上面 apply lambda 10 1 我们发现这些都不是尾递归；\n在这一步之后选择Step Into\n进入apply过程！ 你会发现apply后，他就在do_if_form。注意，在调用do_if_form的时候参数tail=True 这里继续选择Step into\n然后就到了最核心的部分，这里终于会有Unevaluated类产生了（下面都简写为un类） 这里你要思考，我的un类返回到哪里了？你点一下Step Into，发现这个东西是返回到了scheme_eval里面。\n那么他是在eval谁？你看左边的Variables，这会正在做do_define_form。 然后你就会发现他回到了最外层的apply的过程 诶你是不是发现，这里上面虽然最左边的tail是false,但是这里返回了un类。\n思路理顺 通过上面的分析，我们发现，实际上un类并不会”漏出去“，实际上他是通过好层的递归调用，在最外层的eval_call（eval的是函数的call-expression)拿到了最里层eval_call（这里是do_if_form）返回的un类，然后再循环往复的eval。\n反思总结 我和xsh和fhy同学都交流过，他们似乎都感觉最后这个un类会被返回到最外层，从而你最后的eval结果都是一个un类。说明这应该是许多同学的共同的问题 然而通过Debug的逐句调用，我们发现靠空想是不行的，需要深入的一行行把自己当编译器理解。Debug应该是我们要掌握的一门技术。 最后再次感谢助教、各位同学的帮助！\n","date":"2025-01-08T00:00:00Z","image":"https://SweetGargamel.github.io/p/%E8%A7%A3%E6%9E%90sicp-proj4-ec/CoverImg_hu14838150606946409445.png","permalink":"https://SweetGargamel.github.io/p/%E8%A7%A3%E6%9E%90sicp-proj4-ec/","title":"解析SICP-Proj4 EC"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL + ALT + Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nHyperlinked image ![[fbd3eea69cc016df702f2f87583a19e8_MD5.png]]\nThe above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2019-03-11T00:00:00Z","image":"https://SweetGargamel.github.io/p/markdown-syntax-guide/pawel-czerwinski-8uZPynIu-rQ-unsplash_hu6307248181568134095.jpg","permalink":"https://SweetGargamel.github.io/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\nExierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\nComas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et Vagus elidunt The Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","date":"2019-03-09T00:00:00Z","image":"https://SweetGargamel.github.io/p/placeholder-text/matt-le-SJSpo9hQf7s-unsplash_hu10664154974910995856.jpg","permalink":"https://SweetGargamel.github.io/p/placeholder-text/","title":"Placeholder Text"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so: 1 2 3 {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} To enable KaTeX globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTeX on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples Inline math: $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$\n$$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$","date":"2019-03-08T00:00:00Z","permalink":"https://SweetGargamel.github.io/p/math-typesetting/","title":"Math Typesetting"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3 .emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; } ","date":"2019-03-05T00:00:00Z","image":"https://SweetGargamel.github.io/p/emoji-support/the-creative-exchange-d2zvqp3fpro-unsplash_hu5876398126655421130.jpg","permalink":"https://SweetGargamel.github.io/p/emoji-support/","title":"Emoji Support"}]